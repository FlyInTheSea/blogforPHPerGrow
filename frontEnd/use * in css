当页面载入过程中，CSS 和 HTML 是并行下载的。并且通常CSS是在HEAD中引入的，并且体积不如HTML大，所以CSS会先下载完。
下载的过程中浏览器就已经开始对CSS中的规则进行索引，也就是已经确定哪一个元素呈现的样式是如何的了。
同时，浏览器根据HTML构建出的DOM树，其中的每一个元素会直接去CSS规则索引中去比对，构建出渲染树。
这个过程都是并行的，并且CSS规则是进行了索引的，因此速度非常的快速。

那么我们看看CSS规则的来源主要有2个，一是浏览器内置的元素样式，Firefox 3.x版是放在目录下的res文件夹内，4.0版和Chrome中没找到（这里是我的主观臆断不太可靠，大家自行辨别），另一个就是页面提供的。根据查看 放在 res 文件夹下的 CSS 文件就可以得知，就是是什么样式都不写，已经为每一个HTML元素设定好了基本样式了。

读取选择器的原则是从右到左。因此，我们书写的右边的最后一个选择器，被称作关键选择器，对于效率有决定性影响。



最后补两个前端优化小知识：
1，由于CSS规则和HTML是并行载入的，因此把CSS放在HEAD中是非常有必要的。
2，少使用 :last-child 。因为这个选择器无法索引起来，必须等DOM构件完，才能知道他是不是父元素中最后的那个 元素。这种就非常慢了，慎用。
